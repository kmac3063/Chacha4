{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Choose.js","panels/WelcomeScreen.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","host","scheme","status","db","useState","currentSecond","setCurrentSecond","myInterval","setMyInterval","stateString","setStateString","useEffect","connectTimer","console","log","docRef","doc","toString","setInterval","getDoc","then","snap","exists","data","prev","clearInterval","setDoc","slice","length","run","bridge","send","switchChange","index","value","prev1","res","sec","parseInt","timerId","left","onClick","data-to","style","display","size","stretched","marginRight","mode","before","src","photo_200","first_name","last_name","justifyContent","overflow","split","map","symb","padding","backgroundColor","checked","onChange","e","target","disabled","multiline","Choose","connect","WelcomeScreen","icon","header","action","App","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","friend","setFriend","setStatus","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","a","user","p","is_available","alert","subscribe","detail","type","schemeAttribute","document","createAttribute","body","attributes","setNamedItem","fetchData","checkAvailable","currentTarget","dataset","to","users","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f00395d7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport {Avatar, Button, Cell, Div, Group, Header, Panel, PanelHeader, PanelHeaderBack, Switch} from '@vkontakte/vkui';\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {doc, getDoc, setDoc} from \"firebase/firestore/lite\";\nimport {Icon28UserOutline} from \"@vkontakte/icons\";\n\n\nconst Home = ({id, go, fetchedUser, scheme, host, status, db}) => {\n    const [currentSecond, setCurrentSecond] = useState(0)\n    const [myInterval, setMyInterval] = useState(null)\n    const [stateString, setStateString] = useState(\"00000000P\")\n\n    useEffect(() => {\n        let connectTimer = null\n        if (status === \"connect\") {\n            if (host === null) {\n                return\n            }\n            console.log(host)\n            const docRef = doc(db, 'hs', host.id.toString())\n            connectTimer = setInterval(() => {\n                getDoc(docRef).then(snap => {\n                    if (snap.exists()) {\n                        console.log(\"snap.data().stateString: \" + snap.data().stateString)\n                        setStateString(() => snap.data().stateString)\n                    }\n                })\n            }, 100)\n        } else if (fetchedUser !== null) {\n            const docRef = doc(db, 'hs', fetchedUser.id.toString())\n            getDoc(docRef).then(snap => {\n                if (snap.exists()) {\n                    console.log(\"snap.data().stateString: \" + snap.data().stateString)\n                    setStateString(() => snap.data().stateString)\n                }\n            })\n        }\n        return () => {\n            if (myInterval !== null)\n                setMyInterval((prev) => {\n                    clearInterval(prev)\n                    return prev\n                })\n            if (connectTimer !== null) {\n                clearInterval(connectTimer)\n            }\n            if (status === \"host\" && fetchedUser !== null) {\n                setDoc(doc(db, 'hs', fetchedUser.id.toString()), {\n                    stateString: stateString.slice(0, 8) + \"P\",\n                })\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        console.log(\"useEffect stateString:\" + stateString)\n        if (status === \"host\" && fetchedUser !== null) {\n            setDoc(doc(db, 'hs', fetchedUser.id.toString()), {\n                stateString: stateString,\n            })\n        }\n\n        if (stateString[stateString.length - 1] === \"R\") {\n            run()\n        } else {\n            setCurrentSecond(0)\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 0});\n        }\n    }, [stateString])\n\n    const switchChange = (index, value) => {\n        setStateString((prev1) => {\n            let res = prev1.slice(0, index)\n                + (prev1[index] === '1' ? '0' : '1') + prev1.slice(index + 1, 8) + \"P\"\n            console.log(res)\n            return res\n        })\n    }\n\n    const startPressed = () => {\n        setStateString((prev) => prev.slice(0, 8) + \"R\")\n    }\n\n    const stopPressed = () => {\n        setMyInterval((prev) => {\n            if (prev !== null) {\n                clearInterval(prev)\n            }\n            return null\n        })\n        setStateString((prev) => prev.slice(0, 8) + \"P\")\n    }\n\n    const run = () => {\n        let sec = 0\n        setCurrentSecond(1)\n        bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": parseInt(stateString[0])});\n        let timerId = setInterval(() => {\n            console.log(1)\n            setCurrentSecond((prev) => 1 + (prev) % 8)\n            sec = (sec + 1) % 8\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": parseInt(stateString[sec])});\n        }, 1000);\n        setMyInterval(timerId)\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Choose'}/>}\n        >{status === \"host\" ? \"Диджей\" : \"Слушатель\"}</PanelHeader>\n        {status === \"host\" ?\n            <Group>\n                <Div style={{display: 'flex'}}>\n                    <Button size=\"l\" stretched style={{marginRight: 8}}\n                            onClick={startPressed}>Начать</Button>\n                    <Button size=\"l\" stretched mode=\"secondary\" onClick={stopPressed}>Остановить</Button>\n                </Div>\n            </Group> : <Group>\n                <Header mode=\"secondary\">Наш диджей</Header>\n              <Cell before={<Avatar src={host !== null? host.photo_200 : \"\"}/>}>{host !== null? host.first_name + \" \" + host.last_name : \"...\"}</Cell>\n            </Group>\n        }\n        <Group>\n            <Header mode=\"secondary\">Управление секундами</Header>\n            <Div style={{display: \"flex\", justifyContent: \"space-between\", overflow: \"auto\"}}>\n                {stateString.split('').map((symb, index) => {\n                    if (symb !== '0' && symb !== '1') return null\n                    return <Div key={index} style={{\n                        padding: \"0\",\n                        backgroundColor: index + 1 === currentSecond ? \"#D7FDDB\" : \"#FFFFFF\"\n                    }}>\n                        <Div style={{padding: \"0\"}}>{index + 1} сек</Div>\n                        {status === \"host\" ?\n                            <Switch checked={symb === \"1\"}\n                                    onChange={(e) => switchChange(index, e.target.value)}/> :\n                            <Switch checked={symb === \"1\"} disabled\n                                    onChange={(e) => switchChange(index, e.target.value)}/>}\n                    </Div>\n                })\n                }\n            </Div>\n        </Group>\n        <Group>\n            <Header mode=\"secondary\">{status === \"host\" ? \"Это ваша комната\" : \"Вы слушитель\"}</Header>\n            <Cell multiline>{status === \"host\" ?\n                \"Все подключившиеся к вам люди будут получать сигнал о включении фонарика в один момент с вами\" :\n                \"Ждите, пока владелец комнаты включит вам фонарик!\"\n            }</Cell>\n        </Group>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Panel,\n    PanelHeader,\n    Header,\n    Button,\n    Group,\n    Cell,\n    Div,\n    Avatar,\n    SimpleCell,\n    Switch,\n    FormItem, Select\n} from '@vkontakte/vkui';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nconst Choose = ({id, go, fetchedUser, scheme, connect, host}) => {\n    return <Panel id={id}>\n        <PanelHeader>Один-ноль фонарик</PanelHeader>\n        <Group>\n            <Div style={{display: 'flex'}}>\n                <Button size=\"l\" stretched style={{marginRight: 8}} onClick={connect} data-to={\"Home\"}>Подключиться</Button>\n                <Button size=\"l\" stretched mode=\"secondary\" onClick={host} data-to={\"Home\"}>Быть диджеем</Button>\n            </Div>\n        </Group>\n    </Panel>\n}\n\nexport default Choose;\n","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\nimport Choose from \"./Choose\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        // if (user == null || user.first_name == null)\r\n        //     return \"Друже\"\r\n        // return fetchedUser.first_name\r\n        return \"Приятель\"\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Choose\">Перейти к фонарику</Button>}\r\n                >\r\n                    Приложение разработано в рамках хакатона \"Вездекод 2021\"\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React, {useEffect, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ScreenSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\nimport Choose from \"./panels/Choose\";\n\nimport {initializeApp} from \"firebase/app\";\nimport {getFirestore} from 'firebase/firestore/lite';\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('Choose');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n    const [friend, setFriend] = useState(null)\n    const [status, setStatus] = useState(\"connect\")\n\n    // const schemeAttribute = document.createAttribute('scheme');\n    // schemeAttribute.value = 'dark';\n    // document.body.attributes.setNamedItem(schemeAttribute);\n    const d = false\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyA4pTIWp427xU-6UKZhMS5gm7jgZpnjTaM\",\n        authDomain: \"chacha4-45297.firebaseapp.com\",\n        projectId: \"chacha4-45297\",\n        storageBucket: \"chacha4-45297.appspot.com\",\n        messagingSenderId: \"908778198952\",\n        appId: \"1:908778198952:web:a3d68cc210e47a638aaf9d\"\n    };\n\n    const firebaseApp = initializeApp(firebaseConfig);\n    const db = getFirestore(firebaseApp)\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function checkAvailable() {\n            bridge.send(\"VKWebAppFlashGetInfo\").then(\n                (p) => {\n                    if (!p.is_available) {\n                        alert(\"На вашем устройстве отсутствует/не работает фонарик :(\")\n                    }\n                }\n            )\n        }\n\n\n        fetchData();\n        checkAvailable()\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const connect = () => {\n        bridge.send('VKWebAppGetFriends', {}).then(data => {\n            setFriend(() => data.users[0])\n            setStatus(\"connect\")\n            setActivePanel(() => 'Home')\n        })\n\n        if (d) {\n            let a = {\n                \"id\": 1,\n                \"first_name\": \"Albert\",\n                \"last_name\": \"Usmanov\",\n                \"sex\": 2,\n                \"photo_200\": \"https://sun1-86.userapi.com/s/v1/ig2/0mApXKbszoZQ_5V-YXS7rD54TDPTxn8xu9XbmzfkWCxn3yxb54W8ErTcyXqqApWMBPEqA0ZLVjcfF_J3hTpOT-5X.jpg?size=50x50&quality=95&crop=584,681,359,359&ava=1\"\n            }\n\n            setUser({id: 0})\n            setFriend(() => a)\n            setStatus(\"connect\")\n            setActivePanel(() => 'Home')\n        }\n    }\n\n    const host = () => {\n        setStatus(\"host\")\n        setActivePanel(() => 'Home')\n        setFriend(() => null)\n\n        if (d) {\n            setUser({id: 0})\n        }\n    }\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Choose id='Choose' fetchedUser={fetchedUser} go={go} connect={connect} host={host}/>\n                    <Home id='Home' fetchedUser={fetchedUser} go={go}\n                          host={friend} status={status} db={db}\n                    />\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}